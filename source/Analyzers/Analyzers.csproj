<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>11.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{2F2B32B2-31D8-4D52-A05F-0D909BD07EBE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Roslynator.CSharp</RootNamespace>
    <AssemblyName>Roslynator.CSharp.Analyzers</AssemblyName>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TargetFrameworkProfile>Profile7</TargetFrameworkProfile>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>..\..\Roslynator.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>..\..\Roslynator.ruleset</CodeAnalysisRuleSet>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>Roslynator.CSharp.Analyzers.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Analysis\BinaryExpressionAnalysis.cs" />
    <Compile Include="Analysis\BinaryExpressionAnalysisResult.cs" />
    <Compile Include="Analysis\UsingStatementAnalysis.cs" />
    <Compile Include="Analyzers\FormatEachStatementOnSeparateLineAnalyzer.cs" />
    <Compile Include="Analyzers\MergeIfStatementWithNestedIfStatementAnalyzer.cs" />
    <Compile Include="Analyzers\MergeLocalDeclarationWithReturnStatementAnalyzer.cs" />
    <Compile Include="Analyzers\RedundantEmptyLineAnalyzer.cs" />
    <Compile Include="CodeFixProviders\StatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RegionDirectiveTriviaCodeFixProvider.cs" />
    <Compile Include="Refactorings\SwapExpressionsInBinaryExpressionRefactoring.cs" />
    <Compile Include="DiagnosticAnalyzers\RegionDirectiveTriviaDiagnosticAnalyzer.cs" />
    <Compile Include="Refactorings\UsePostfixUnaryOperatorInsteadOfAssignmentRefactoring.cs" />
    <Compile Include="Analyzers\SimplifyIfStatementToReturnStatementAnalyzer.cs" />
    <Compile Include="CodeFixProviders\AddEmptyLineBetweenDeclarationsCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ArgumentListCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AvoidEmbeddedStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AddConstructorArgumentListCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AddEmptyLineAfterEmbeddedStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AnonymousMethodCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ArrowExpressionClauseCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AwaitExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\BaseCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\CaseSwitchLabelCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ExtractMemberToNewDocumentCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\NewLineCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ReplaceTabWithSpacesCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UsingDirectiveCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\TabWhiteSpaceDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AwaitExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AssignmentExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseCarriageReturnAndLinefeedAsNewLineDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseLinefeedAsNewLineDiagnosticAnalyzer.cs" />
    <Compile Include="Extensions\CodeFixContextExtensions.cs" />
    <Compile Include="Refactorings\SimplifyLinqMethodChainRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceAnyMethodWithCountOrLengthPropertyRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceCountMethodWithAnyMethodRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceCountMethodWithCountOrLengthPropertyRefactoring.cs" />
    <Compile Include="CodeFixProviders\ConstructorDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\DoStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\VariableDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\FinallyClauseCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ForStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\InvocationExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\MemberDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\MergeLocalDeclarationWithReturnStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\IfStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\FormatCaseLabelStatementOnSeparateLineCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\InterpolatedStringCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\LockStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\MethodDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\NamespaceDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\PropertyDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\SimplifyNestedUsingStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveSemicolonFromEndOfDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\MemberAccessExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AssignmentExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ReplaceIfStatementWithReturnStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\SimplifyLogicalNotExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ReplaceVarWithExplicitTypeCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveOriginalExceptionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ConditionalExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveEnumDefaultBaseTypeCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\InitializerCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ElseClauseCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\EmptyStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\EnumDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\FormatAccessorListCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\FormatEmptyBlockCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ImplicitArrayCreationExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ParenthesizedLambdaExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveEmptyObjectInitializerCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveRedundantBracesCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveRedundantParenthesesCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveRedundantPartialModifierCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveRedundantSealedModifierCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveTriviaCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\FormatEachStatementOnSeparateLineCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\FormatEmbeddedStatementOnSeparateLineCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\SwitchSectionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UseExpressionBodiedMemberCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UseNameOfOperatorCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\SimplifyNullableOfTCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UsePredefinedTypeCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\SimplifyLambdaExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\WhileStatementCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\SimpleAssignmentExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\PropertyDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\LambdaExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\SplitVariableDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\CompilationUnitDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ConstructorDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\DeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\DoStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\FinallyClauseDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\FormatDeclarationBracesDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ForStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\InterpolatedStringDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\InvocationExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\LockStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\MethodDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\NamespaceDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AvoidSemicolonAtEndOfDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\RedundantEmptyLineDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\LogicalNotExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ThrowStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UsingDirectiveDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\WhileStatementDiagnosticAnalyzer.cs" />
    <Compile Include="Extensions\DiagnosticDescriptorExtensions.cs" />
    <Compile Include="IfElseAnalysisResult.cs" />
    <Compile Include="Refactorings\AddBracesRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceDoStatementWithWhileStatementRefactoring.cs" />
    <Compile Include="Refactorings\FormatStatementOnNextLineRefactoring.cs" />
    <Compile Include="Refactorings\ExpandExpressionBodiedMemberRefactoring.cs" />
    <Compile Include="Refactorings\RemoveBracesFromUsingStatementRefactoring.cs" />
    <Compile Include="Refactorings\RemoveModifierRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantBooleanLiteralRefactoring.cs" />
    <Compile Include="DiagnosticAnalyzers\AccessorListDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AnonymousMethodDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ArrowExpressionClauseDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AvoidEmbeddedStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\CatchClauseDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ConditionalExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ElseClauseDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\BaseDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\GenericNameDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\InitializerDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\RemoveRedundantSealedModifierDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\RemoveRedundantBracesDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\EmptyStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\EnumDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ImplicitArrayCreationExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\NamedTypeDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ReturnStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\SwitchSectionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ParenthesizedExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\QualifiedNameDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\IdentifierNameDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\IfStatementSyntaxDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\BinaryExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ParenthesizedLambdaExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ObjectCreationExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ModifiersDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\BooleanLiteralDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AttributeArgumentListDiagnosticAnalyzer.cs" />
    <Compile Include="CodeFixProviders\AddDefaultAccessModifierCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\FormatBinaryOperatorOnNextLineCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ReorderModifiersCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\BinaryExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AttributeArgumentListCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ReplaceVarWithExplicitTypeInForEachCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ReplaceExplicitTypeWithVarCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\SimpleMemberAccessExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ArgumentDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UsingStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\WhitespaceDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseExpressionBodiedMemberDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticCategories.cs" />
    <Compile Include="DiagnosticIdentifiers.cs" />
    <Compile Include="DiagnosticDescriptors.cs" />
    <Compile Include="DiagnosticAnalyzers\AttributeListDiagnosticAnalyzer.cs" />
    <Compile Include="CodeFixProviders\DeclareEachAttributeSeparatelyCodeFixProvider.cs" />
    <Compile Include="Extensions\SyntaxNodeAnalysisContextExtensions.cs" />
    <Compile Include="Refactorings\SimplifyBooleanComparisonRefactoring.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Include="DiagnosticAnalyzers\BlockThatCanBeEmbeddedStatementDiagnosticAnalyzer.cs" />
    <Compile Include="CodeFixProviders\RemoveBracesCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\ForEachStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\VariableDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\EmbeddedStatementDiagnosticAnalyzer.cs" />
    <Compile Include="CodeFixProviders\AddBracesCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveBracesFromIfElseCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\FieldSymbolDiagnosticAnalyzer.cs" />
    <Compile Include="CodeFixProviders\RenameFieldAccordingToCamelCaseWithUnderscoreCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\BlockDiagnosticAnalyzer.cs" />
    <Compile Include="CodeFixProviders\AddBracesToIfElseCodeFixProvider.cs" />
    <Compile Include="SyntaxHelper.cs" />
    <Compile Include="TokenPair.cs" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
    <None Include="CSharpAnalyzers.nuspec" />
    <None Include="packages.config" />
    <None Include="Roslynator.CSharp.Analyzers.snk" />
    <None Include="tools\install.ps1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="tools\uninstall.ps1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Content Include="Analyzers.xml" />
    <Content Include="LICENSE.txt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CodeAnalysis, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.Common.1.0.0\lib\portable-net45+win8\Microsoft.CodeAnalysis.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.CSharp.1.0.0\lib\portable-net45+win8\Microsoft.CodeAnalysis.CSharp.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp.Workspaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.CSharp.Workspaces.1.0.0\lib\portable-net45+win8\Microsoft.CodeAnalysis.CSharp.Workspaces.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.Workspaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.Workspaces.Common.1.0.0\lib\portable-net45+win8\Microsoft.CodeAnalysis.Workspaces.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Collections.Immutable, Version=1.1.36.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\System.Collections.Immutable.1.1.36\lib\portable-net45+win8+wp8+wpa81\System.Collections.Immutable.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.AttributedModel, Version=1.0.27.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.AttributedModel.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Convention, Version=1.0.27.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Convention.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Hosting, Version=1.0.27.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Hosting.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Runtime, Version=1.0.27.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Runtime.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.TypedParts, Version=1.0.27.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.TypedParts.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Reflection.Metadata, Version=1.0.21.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\System.Reflection.Metadata.1.0.21\lib\portable-net45+win8\System.Reflection.Metadata.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Utilities\Utilities.csproj">
      <Project>{34a3e42e-2254-4ee7-a152-eedb18e3d7e3}</Project>
      <Name>Utilities</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Analyzer Include="..\..\packages\CSharpAnalyzers.1.0.0\analyzers\dotnet\cs\Roslynator.CSharp.Analyzers.dll" />
    <Analyzer Include="..\..\packages\CSharpAnalyzers.1.0.0\analyzers\dotnet\cs\Roslynator.Utilities.dll" />
    <Analyzer Include="..\..\packages\Microsoft.CodeAnalysis.Analyzers.1.0.0\analyzers\dotnet\cs\Microsoft.CodeAnalysis.Analyzers.dll" />
    <Analyzer Include="..\..\packages\Microsoft.CodeAnalysis.Analyzers.1.0.0\analyzers\dotnet\cs\Microsoft.CodeAnalysis.CSharp.Analyzers.dll" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\v4.6\Microsoft.Portable.CSharp.targets" />
  <Target Name="AfterBuild" Condition=" '$(Configuration)' == 'Release'">
    <GetAssemblyIdentity AssemblyFiles="$(OutDir)\$(AssemblyName).dll">
      <Output TaskParameter="Assemblies" ItemName="AnalyzerAssemblyInfo" />
    </GetAssemblyIdentity>
    <Exec Command="&quot;$(SolutionDir)packages\NuGet.CommandLine.3.4.3\tools\NuGet.exe&quot; pack &quot;$(ProjectDir)\CSharpAnalyzers.nuspec&quot; -OutputDirectory &quot;$(ProjectDir)NuGetOutputDirectory&quot; -BasePath &quot;$(ProjectDir)$(OutDir).&quot; -Version %(AnalyzerAssemblyInfo.Version) -Prop Configuration=Release -NoPackageAnalysis" LogStandardErrorAsError="true" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
    </Exec>
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>