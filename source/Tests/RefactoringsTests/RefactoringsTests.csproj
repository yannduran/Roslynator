<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>11.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{6A91F900-4DDB-4341-9D8B-B1B65C6A5536}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Roslynator.CSharp.Refactorings.Tests</RootNamespace>
    <AssemblyName>Roslynator.CSharp.Refactorings.Tests</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TargetFrameworkProfile>Profile7</TargetFrameworkProfile>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>..\RefactoringsTests.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="AddToMethodInvocationRefactoring.cs" />
    <Compile Include="GenerateBaseConstructorsRefactoring.cs" />
    <Compile Include="GenerateOnEventMethodRefactoring.cs" />
    <Compile Include="MergeInterpolationIntoInterpolatedStringRefactoring.cs" />
    <Compile Include="RemoveAllPreprocessorDirectivesRefactoring.cs" />
    <Compile Include="RemoveInterpolationRefactoring.cs" />
    <Compile Include="RemoveRegionRefactoring.cs" />
    <Compile Include="RemoveStatementRefactoring.cs" />
    <Compile Include="DuplicateStatementRefactoring.cs" />
    <Compile Include="ExtractTypeDeclarationToNewFile\ExtractTypeDeclarationToNewFile.cs" />
    <Compile Include="AddDefaultValueToReturnStatement.cs" />
    <Compile Include="AddUsingDirectiveRefactoring.cs" />
    <Compile Include="CollapseToInitializerRefactoring.cs" />
    <Compile Include="MergeAssignmentExpressionWithReturnStatementRefactoring.cs" />
    <Compile Include="MergeLocalDeclarationsRefactoring.cs" />
    <Compile Include="PromoteLocalToParameter.cs" />
    <Compile Include="RemoveAllStatementsRefactoring.cs" />
    <Compile Include="IntroduceAndInitializeRefactoring.cs" />
    <Compile Include="RemoveDirectiveAndRelatedDirectivesRefactoring.cs" />
    <Compile Include="RemoveUsingAliasDirectiveRefactoring.cs" />
    <Compile Include="ReplaceAsWithCastRefactoring.cs" />
    <Compile Include="ReplaceConditionalExpressionWithExpressionRefactoring.cs" />
    <Compile Include="ReplaceEqualsExpressionWithStringEqualsRefactoring.cs" />
    <Compile Include="ReplaceIfElseWithConditionalExpressionRefactoring.cs" />
    <Compile Include="ReplaceIfElseWithSwitchRefactoring.cs" />
    <Compile Include="ReplaceInterpolatedStringWithInterpolationExpressionRefactoring.cs" />
    <Compile Include="ReplacePropertyWithMethod\ReplacePropertyWithMethodRefactoring.cs" />
    <Compile Include="ReplacePropertyWithMethod\ReplacePropertyWithMethodRefactoring2.cs" />
    <Compile Include="ReplaceMethodWithProperty\ReplaceMethodWithPropertyRefactoring2.cs" />
    <Compile Include="WrapInIfDirectiveRefactoring.cs" />
    <Compile Include="WrapInRegionRefactoring.cs" />
    <Compile Include="InlineMethodRefactoring_.cs" />
    <Compile Include="InlineMethodRefactoring.cs" />
    <Compile Include="AddConfigureAwaitRefactoring.cs" />
    <Compile Include="RemoveStatementsFromSwitchSectionsRefactoring.cs" />
    <Compile Include="CreateConditionFromBooleanExpressionRefactoring.cs" />
    <Compile Include="RemoveEmptyLinesRefactoring.cs" />
    <Compile Include="CommentOutStatementRefactoring.cs" />
    <Compile Include="CommentOutMemberRefactoring.cs" />
    <Compile Include="AddDefaultValueToParameterRefactoring.cs" />
    <Compile Include="InitializeLocalWithDefaultValueRefactoring.cs" />
    <Compile Include="RemoveAllSwitchSectionsRefactoring.cs" />
    <Compile Include="RemoveAllDocumentationCommentsRefactoring.cs" />
    <Compile Include="RemoveConditionFromLastElseRefactoring.cs" />
    <Compile Include="RemoveAllMemberDeclarationsRefactoring.cs" />
    <Compile Include="ReplaceCountWithLengthOrLengthWithCountRefactoring.cs" />
    <Compile Include="AddNameToLocalDeclarationRefactoring.cs" />
    <Compile Include="SplitLocalDeclarationRefactoring.cs" />
    <Compile Include="ReplaceAnonymousMethodWithLambdaExpressionRefactoring.cs" />
    <Compile Include="ReplaceHasFlagWithBitwiseOperationRefactoring.cs" />
    <Compile Include="ChangeMethodReturnTypeToVoidRefactoring.cs" />
    <Compile Include="AddUsingStaticDirectiveRefactoring.cs" />
    <Compile Include="ReplaceWhileStatementWithDoStatementRefactoring.cs" />
    <Compile Include="ReplaceDoStatementWithWhileStatementRefactoring.cs" />
    <Compile Include="ChangeExplicitTypeToVarRefactoring.cs" />
    <Compile Include="RemoveBracesRefactoring.cs" />
    <Compile Include="SimplifyLambdaExpressionRefactoring.cs" />
    <Compile Include="InsertInterpolationIntoInterpolatedStringRefactoring.cs" />
    <Compile Include="ReplaceStringLiteralWithCharacterLiteralRefactoring.cs" />
    <Compile Include="MarkMemberAsStaticRefactoring.cs" />
    <Compile Include="GenerateSwitchSectionsRefactoring.cs" />
    <Compile Include="ExtractExpressionFromConditionRefactoring.cs" />
    <Compile Include="UseExpressionBodiedMemberRefactoring.cs" />
    <Compile Include="SwapMemberDeclarationsRefactoring.cs" />
    <Compile Include="SwapStatementsInIfElseRefactoring.cs" />
    <Compile Include="SwapExpressionsInConditionalExpressionRefactoring.cs" />
    <Compile Include="SwapExpressionsInBinaryExpressionRefactoring.cs" />
    <Compile Include="ReverseForLoopRefactoring.cs" />
    <Compile Include="RenameFieldIdentifierAccordingToTypeNameRefactoring.cs" />
    <Compile Include="RenamePropertyAccordingToTypeNameRefactoring.cs" />
    <Compile Include="RenameParameterAccordingToTypeNameRefactoring.cs" />
    <Compile Include="RenameMethodAccordingToTypeNameRefactoring.cs" />
    <Compile Include="RenameForeachVariableAccordingToTypeNameRefactoring.cs" />
    <Compile Include="RenameBackingFieldAccordingToPropertyNameRefactoring.cs" />
    <Compile Include="RemovePropertyInitializerRefactoring.cs" />
    <Compile Include="RemoveParameterNameFromArgumentRefactoring.cs" />
    <Compile Include="RemoveMemberDeclarationRefactoring.cs" />
    <Compile Include="RemoveCommentRefactoring.cs" />
    <Compile Include="RemoveBracesFromSwitchSectionsRefactoring.cs" />
    <Compile Include="RemoveBracesFromSwitchSectionRefactoring.cs" />
    <Compile Include="RemoveAllRegionDirectivesRefactoring.cs" />
    <Compile Include="RemoveAllCommentsExceptDocumentationCommentsRefactoring.cs" />
    <Compile Include="RemoveAllCommentsRefactoring.cs" />
    <Compile Include="NotifyPropertyChangedRefactoring.cs" />
    <Compile Include="NegateOperatorRefactoring.cs" />
    <Compile Include="NegateBooleanLiteralRefactoring.cs" />
    <Compile Include="NegateBinaryExpressionRefactoring.cs" />
    <Compile Include="MergeStringLiteralsRefactoring.cs" />
    <Compile Include="MakeMemberAbstractRefactoring.cs" />
    <Compile Include="IntroduceConstructorRefactoring.cs" />
    <Compile Include="CheckParameterForNullRefactoring.cs" />
    <Compile Include="ChangeTypeAccordingToExpressionRefactoring.cs" />
    <Compile Include="ChangeForeachTypeAccordingToExpressionRefactoring.cs" />
    <Compile Include="ChangeMemberTypeAccordingToReturnStatementRefactoring.cs" />
    <Compile Include="ChangeMemberTypeAccordingToYieldReturnStatementRefactoring.cs" />
    <Compile Include="ChangeVarToExplicitTypeRefactoring.cs" />
    <Compile Include="ReplaceConditionalExpressionWithIfElseRefactoring.cs" />
    <Compile Include="ReplaceIncrementOperatorWithDecrementOperatorRefactoring.cs" />
    <Compile Include="ReplacePrefixOperatorWithPostfixOperatorRefactoring.cs" />
    <Compile Include="ReplaceStringFormatWithInterpolatedStringRefactoring.cs" />
    <Compile Include="ReplaceSwitchWithIfElseRefactoring.cs" />
    <Compile Include="ReplaceStringEmptyWithEmptyStringLiteralRefactoring.cs" />
    <Compile Include="InsertInterpolationIntoStringLiteralRefactoring.cs" />
    <Compile Include="ReplaceRegularStringLiteralWithVerbatimStringLiteralRefactoring.cs" />
    <Compile Include="ReplaceFieldWithConstantRefactoring.cs" />
    <Compile Include="ReplaceForeachWithForRefactoring.cs" />
    <Compile Include="ReplaceMethodWithProperty\ReplaceMethodWithPropertyRefactoring.cs" />
    <Compile Include="ReplaceInterpolatedStringWithStringLiteralRefactoring.cs" />
    <Compile Include="ReplaceForWithForeachRefactoring.cs" />
    <Compile Include="ReplaceConstantWithFieldRefactoring.cs" />
    <Compile Include="ReplaceEmptyStringLiteralWithStringEmptyRefactoring.cs" />
    <Compile Include="ReplaceAnyWithAllOrAllWithAnyRefactoring.cs" />
    <Compile Include="WrapInUsingStatementRefactoring.cs" />
    <Compile Include="ReplaceVerbatimStringLiteralWithRegularStringLiteralRefactoring.cs" />
    <Compile Include="DuplicateArgumentRefactoring.cs" />
    <Compile Include="DuplicateMemberRefactoring.cs" />
    <Compile Include="DuplicateParameterRefactoring.cs" />
    <Compile Include="ExpandAssignmentExpressionRefactoring.cs" />
    <Compile Include="ExpandCoalesceExpressionRefactoring.cs" />
    <Compile Include="ExpandEventRefactoring.cs" />
    <Compile Include="ExpandExpressionBodiedMemberRefactoring.cs" />
    <Compile Include="ExpandLambdaExpressionBodyRefactoring.cs" />
    <Compile Include="ExpandInitializerRefactoring.cs" />
    <Compile Include="ExpandPropertyRefactoring.cs" />
    <Compile Include="ExtractDeclarationFromUsingStatementRefactoring.cs" />
    <Compile Include="RemoveParenthesesRefactoring.cs" />
    <Compile Include="ExtractGenericTypeRefactoring.cs" />
    <Compile Include="ExtractStatementRefactoring.cs" />
    <Compile Include="FormatAccessorBracesRefactoring.cs" />
    <Compile Include="FormatArgumentListRefactoring.cs" />
    <Compile Include="FormatParameterListRefactoring.cs" />
    <Compile Include="FormatBinaryExpressionRefactoring.cs" />
    <Compile Include="FormatConditionalExpressionRefactoring.cs" />
    <Compile Include="FormatExpressionChainRefactoring.cs" />
    <Compile Include="FormatInitializerRefactoring.cs" />
    <Compile Include="UncommentRefactoring.cs" />
    <Compile Include="ParenthesizeExpressionRefactoring.cs" />
    <Compile Include="AddParameterNameToArgumentRefactoring.cs" />
    <Compile Include="AddParameterNameToParameterRefactoring.cs" />
    <Compile Include="AddCastExpressionRefactoring.cs" />
    <Compile Include="AddBracesToSwitchSectionsRefactoring.cs" />
    <Compile Include="AddBracesToSwitchSectionRefactoring.cs" />
    <Compile Include="RemoveBracesFromIfElseRefactoring.cs" />
    <Compile Include="AddBracesToIfElseRefactoring.cs" />
    <Compile Include="AddBracesRefactoring.cs" />
    <Compile Include="AddBooleanComparisonRefactoring.cs" />
    <Compile Include="ReplaceMethodInvocationWithElementAccessRefactoring.cs" />
    <Compile Include="MergeAttributesRefactoring.cs" />
    <Compile Include="SplitAttributesRefactoring.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="RemoveMemberDeclarationsRefactoring.cs" />
    <Compile Include="MergeIfStatementsRefactoring.cs" />
    <Compile Include="WrapInConditionRefactoring.cs" />
    <Compile Include="WrapInTryCatchRefactoring.cs" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>