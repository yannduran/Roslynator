<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>11.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{3AD7B124-7B99-440D-84A1-858BE5AE268B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Roslynator.CSharp.Refactorings</RootNamespace>
    <AssemblyName>Roslynator.CSharp.Refactorings</AssemblyName>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TargetFrameworkProfile>Profile7</TargetFrameworkProfile>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>..\..\Roslynator.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>..\..\Roslynator.ruleset</CodeAnalysisRuleSet>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>Roslynator.CSharp.Refactorings.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Refactorings\GenerateOnEventMethodRefactoring.cs" />
    <Compile Include="Refactorings\AddToMethodInvocationRefactoring.cs" />
    <Compile Include="Refactorings\EventDeclarationRefactoring.cs" />
    <Compile Include="Refactorings\GenerateBaseConstructorsRefactoring.cs" />
    <Compile Include="Refactorings\InlineMethod\IdentifierNameSyntaxRewriter.cs" />
    <Compile Include="Refactorings\InlineMethod\ParameterInfo.cs" />
    <Compile Include="Refactorings\InterpolationRefactoring.cs" />
    <Compile Include="Refactorings\AttributeListRefactoring.cs" />
    <Compile Include="RefactoringIdentifiers.cs" />
    <Compile Include="RefactoringIdentifierSet.cs" />
    <Compile Include="RefactoringSettings.cs" />
    <Compile Include="Refactorings\ExtractTypeDeclarationToNewFileRefactoring.cs" />
    <Compile Include="Refactorings\MergeLocalDeclarationsRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceEqualsExpression\ReplaceEqualsExpressionRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceEqualsExpression\ReplaceEqualsExpressionWithStringIsNullOrEmptyRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceEqualsExpression\ReplaceEqualsExpressionWithStringIsNullOrWhiteSpaceRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceInterpolatedStringWithInterpolationExpressionRefactoring.cs" />
    <Compile Include="Refactorings\ReplacePropertyWithMethod\ReplacePropertyWithMethodSyntaxRewriter.cs" />
    <Compile Include="Refactorings\SelectedStatementsRefactoring.cs" />
    <Compile Include="Refactorings\ExtractExpressionFromCondition\ExtractExpressionFromConditionRefactoring.cs" />
    <Compile Include="Refactorings\PromoteLocalToParameterRefactoring.cs" />
    <Compile Include="Refactorings\IntroduceAndInitialize\IntroduceAndInitializeFieldInfo.cs" />
    <Compile Include="Refactorings\IntroduceAndInitialize\IntroduceAndInitializeInfo.cs" />
    <Compile Include="Refactorings\IntroduceAndInitialize\IntroduceAndInitializePropertyInfo.cs" />
    <Compile Include="Refactorings\IntroduceAndInitialize\IntroduceAndInitializeRefactoring.cs" />
    <Compile Include="Refactorings\NodeInList\DuplicateArgumentOrParameterRefactoring.cs" />
    <Compile Include="Refactorings\NodeInList\NodeInListRefactoring.cs" />
    <Compile Include="Refactorings\IntroduceAndInitialize\IntroduceAndInitializePropertyRefactoring.cs" />
    <Compile Include="Refactorings\IntroduceAndInitialize\IntroduceAndInitializeFieldRefactoring.cs" />
    <Compile Include="Refactorings\NodeInList\RewriterInfo.cs" />
    <Compile Include="Refactorings\ReplaceConditionalExpressionWithExpressionRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceIfElseWithConditionalExpressionRefactoring.cs" />
    <Compile Include="Refactorings\ExtractExpressionFromCondition\ExtractExpressionFromWhileConditionRefactoring.cs" />
    <Compile Include="Refactorings\SelectedSwitchSectionsRefactoring.cs" />
    <Compile Include="Refactorings\WrapSelectedLines\WrapInIfDirectiveRefactoring.cs" />
    <Compile Include="Refactorings\AddUsingDirectiveRefactoring.cs" />
    <Compile Include="Refactorings\CollapseToInitializerRefactoring.cs" />
    <Compile Include="Refactorings\MergeAssignmentExpressionWithReturnStatementRefactoring.cs" />
    <Compile Include="Refactorings\QualifiedNameRefactoring.cs" />
    <Compile Include="Refactorings\WrapSelectedLines\WrapSelectedLinesRefactoring.cs" />
    <Compile Include="Refactorings\WrapSelectedLines\SelectedLinesRefactoring.cs" />
    <Compile Include="Refactorings\WrapSelectedLines\WrapInRegionRefactoring.cs" />
    <Compile Include="Refactorings\AwaitExpressionRefactoring.cs" />
    <Compile Include="Refactorings\BlockRefactoring.cs" />
    <Compile Include="Refactorings\DirectiveTriviaRefactoring.cs" />
    <Compile Include="Refactorings\MergeIfStatementsRefactoring.cs" />
    <Compile Include="Refactorings\RemoveStatementsFromSwitchSectionsRefactoring.cs" />
    <Compile Include="Refactorings\AddDefaultValueToReturnStatementRefactoring.cs" />
    <Compile Include="Refactorings\InlineMethod\InlineMethodRefactoring.cs" />
    <Compile Include="Refactorings\ReturnExpressionRefactoring.cs" />
    <Compile Include="Refactorings\ExtractExpressionFromCondition\ExtractExpressionFromIfConditionRefactoring.cs" />
    <Compile Include="Refactorings\WrapStatements\WrapStatementsRefactoring.cs" />
    <Compile Include="Refactorings\WrapStatements\WrapInIfStatementRefactoring.cs" />
    <Compile Include="Refactorings\WrapStatements\WrapInTryCatchRefactoring.cs" />
    <Compile Include="Refactorings\CreateConditionFromBooleanExpressionRefactoring.cs" />
    <Compile Include="Refactorings\RemoveEmptyLinesRefactoring.cs" />
    <Compile Include="Refactorings\SyntaxNodeRefactoring.cs" />
    <Compile Include="Refactorings\AddDefaultValueToParameterRefactoring.cs" />
    <Compile Include="Refactorings\AnonymousMethodExpressionRefactoring.cs" />
    <Compile Include="Refactorings\AttributeArgumentParameterNameRefactoring.cs" />
    <Compile Include="Refactorings\AttributeArgumentListRefactoring.cs" />
    <Compile Include="Refactorings\CommentOutRefactoring.cs" />
    <Compile Include="Refactorings\DuplicateAttributeArgumentRefactoring.cs" />
    <Compile Include="Refactorings\CaseSwitchLabelRefactoring.cs" />
    <Compile Include="Refactorings\EventFieldDeclarationRefactoring.cs" />
    <Compile Include="Refactorings\AddIdentifierToLocalDeclarationRefactoring.cs" />
    <Compile Include="Refactorings\ExpressionStatementRefactoring.cs" />
    <Compile Include="Refactorings\RemoveAllMemberDeclarationsRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceCountWithLengthOrLengthWithCountRefactoring.cs" />
    <Compile Include="Refactorings\ReverseReversedForLoopRefactoringy.cs" />
    <Compile Include="Refactorings\StatementRefactoring.cs" />
    <Compile Include="Refactorings\FormatAttributeArgumentListRefactoring.cs" />
    <Compile Include="Refactorings\ElseClauseRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceHasFlagWithBitwiseOperationRefactoring.cs" />
    <Compile Include="Refactorings\AddUsingStaticDirectiveRefactoring.cs" />
    <Compile Include="Refactorings\IndexerDeclarationRefactoring.cs" />
    <Compile Include="Refactorings\ChangeMethodReturnTypeToVoidRefactoring.cs" />
    <Compile Include="Refactorings\MethodDeclarationRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceWhileStatementWithDoStatementRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceDoStatementWithWhileStatementRefactoring.cs" />
    <Compile Include="Refactorings\ChangeVariableDeclarationTypeRefactoring.cs" />
    <Compile Include="Refactorings\InitializeLocalWithDefaultValueRefactoring.cs" />
    <Compile Include="Refactorings\WrapStatements\WrapInUsingStatementRefactoring.cs" />
    <Compile Include="Refactorings\FormatConditionalExpressionOnMultipleLinesRefactoring.cs" />
    <Compile Include="Refactorings\FormatConditionalExpressionOnSingleLineRefactoring.cs" />
    <Compile Include="Refactorings\MergeStringLiteralsRefactoring.cs" />
    <Compile Include="Refactorings\RemoveCommentRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceStringLiteralRefactoring.cs" />
    <Compile Include="Refactorings\RemovePropertyInitializerRefactoring.cs" />
    <Compile Include="Refactorings\AddBracesToSwitchSectionRefactoring.cs" />
    <Compile Include="Refactorings\ArgumentParameterNameRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceConstantWithFieldRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceFieldWithConstantRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceMethodWithProperty\ReplaceMethodWithPropertyRefactoring.cs" />
    <Compile Include="Refactorings\ReplacePropertyWithMethod\ReplacePropertyWithMethodRefactoring.cs" />
    <Compile Include="Refactorings\ExpandPropertyAndAddBackingFieldRefactoring.cs" />
    <Compile Include="Refactorings\ExpandPropertyRefactoring.cs" />
    <Compile Include="Refactorings\ExtractDeclarationFromUsingStatementRefactoring.cs" />
    <Compile Include="Refactorings\ExtractExpressionFromParenthesesRefactoring.cs" />
    <Compile Include="Refactorings\ExtractGenericTypeRefactoring.cs" />
    <Compile Include="Refactorings\FormatArgumentListRefactoring.cs" />
    <Compile Include="Refactorings\FormatInitializerOnMultipleLinesRefactoring.cs" />
    <Compile Include="Refactorings\FormatInitializerOnSingleLineRefactoring.cs" />
    <Compile Include="Refactorings\FormatParameterListRefactoring.cs" />
    <Compile Include="Refactorings\LambdaExpressionRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceAnyWithAllOrAllWithAnyRefactoring.cs" />
    <Compile Include="Refactorings\NegateBinaryExpressionRefactoring.cs" />
    <Compile Include="Refactorings\NegateBooleanLiteralRefactoring.cs" />
    <Compile Include="Refactorings\RemoveBracesFromSwitchSectionRefactoring.cs" />
    <Compile Include="Refactorings\RemoveBracesFromSwitchSectionsRefactoring.cs" />
    <Compile Include="Refactorings\AddBracesToSwitchSectionsRefactoring.cs" />
    <Compile Include="Refactorings\InsertInterpolationRefactoring.cs" />
    <Compile Include="Refactorings\DefaultCodeRefactoringProvider.cs" />
    <Compile Include="Refactorings\WrapExpressionInParenthesesRefactoring.cs" />
    <Compile Include="Refactorings\InterpolatedStringTextRefactoring.cs" />
    <Compile Include="Refactorings\RemoveAllStatementsRefactoring.cs" />
    <Compile Include="Refactorings\MarkAllMembersAsStaticRefactoring.cs" />
    <Compile Include="Refactorings\MarkMemberAsStaticRefactoring.cs" />
    <Compile Include="Refactorings\FormatAccessorBraceOnSingleLineRefactoring.cs" />
    <Compile Include="Refactorings\RefactoringContextExtensions.cs" />
    <Compile Include="Refactorings\RefactoringContext.cs" />
    <Compile Include="Refactorings\InterpolatedStringRefactoring.cs" />
    <Compile Include="Refactorings\GenerateSwitchSectionsRefactoring.cs" />
    <Compile Include="Refactorings\YieldReturnStatementRefactoring.cs" />
    <Compile Include="Refactorings\ReturnStatementRefactoring.cs" />
    <Compile Include="Refactorings\ExpandLambdaExpressionBodyRefactoring.cs" />
    <Compile Include="Refactorings\InitializerExpressionRefactoring.cs" />
    <Compile Include="Refactorings\BinaryExpressionRefactoring.cs" />
    <Compile Include="Refactorings\FieldDeclarationRefactoring.cs" />
    <Compile Include="Refactorings\GenericNameRefactoring.cs" />
    <Compile Include="Refactorings\IdentifierNameRefactoring.cs" />
    <Compile Include="Refactorings\IntroduceConstructorRefactoring.cs" />
    <Compile Include="Refactorings\InvocationExpressionRefactoring.cs" />
    <Compile Include="Refactorings\LocalDeclarationStatementRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceStringFormatWithInterpolatedStringRefactoring.cs" />
    <Compile Include="Refactorings\DoStatementRefactoring.cs" />
    <Compile Include="Refactorings\ArrowExpressionClauseRefactoring.cs" />
    <Compile Include="Refactorings\ForStatementRefactoring.cs" />
    <Compile Include="Refactorings\SimpleMemberAccessExpressionRefactoring.cs" />
    <Compile Include="Refactorings\ParenthesizedExpressionRefactoring.cs" />
    <Compile Include="Refactorings\IfStatementRefactoring.cs" />
    <Compile Include="Refactorings\RegionDirectiveTriviaRefactoring.cs" />
    <Compile Include="Refactorings\ExpressionRefactoring.cs" />
    <Compile Include="Refactorings\SwapExpressionsInConditionalExpressionRefactoring.cs" />
    <Compile Include="Refactorings\SwapStatementInIfElseRefactoring.cs" />
    <Compile Include="Refactorings\UncommentRefactoring.cs" />
    <Compile Include="Refactorings\AddBracesRefactoring.cs" />
    <Compile Include="Refactorings\AddCastExpressionRefactoring.cs" />
    <Compile Include="Refactorings\CheckParameterForNullRefactoring.cs" />
    <Compile Include="Refactorings\ArgumentRefactoring.cs" />
    <Compile Include="Refactorings\AccessorDeclarationRefactoring.cs" />
    <Compile Include="Refactorings\AssignmentExpressionRefactoring.cs" />
    <Compile Include="Refactorings\NodeInList\DuplicateArgumentRefactoring.cs" />
    <Compile Include="Refactorings\ExpandInitializerRefactoring.cs" />
    <Compile Include="Refactorings\FormatAccessorBraceOnMultipleLinesRefactoring.cs" />
    <Compile Include="Refactorings\NotifyPropertyChangedRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceMethodInvocationWithElementAccessRefactoring.cs" />
    <Compile Include="Refactorings\NodeInList\DuplicateParameterRefactoring.cs" />
    <Compile Include="Refactorings\ExpandCoalesceExpressionRefactoring.cs" />
    <Compile Include="Refactorings\AddBooleanComparisonRefactoring.cs" />
    <Compile Include="Refactorings\ExpandEventRefactoring.cs" />
    <Compile Include="Refactorings\PropertyDeclarationRefactoring.cs" />
    <Compile Include="Refactorings\StringLiteralExpressionRefactoring.cs" />
    <Compile Include="Refactorings\ExpandExpressionBodiedMemberRefactoring.cs" />
    <Compile Include="Refactorings\FormatExpressionChainRefactoring.cs" />
    <Compile Include="Refactorings\ExtractStatementRefactoring.cs" />
    <Compile Include="Refactorings\FormatBinaryExpressionRefactoring.cs" />
    <Compile Include="Refactorings\MakeMemberAbstractRefactoring.cs" />
    <Compile Include="Refactorings\RemoveBracesRefactoring.cs" />
    <Compile Include="Refactorings\RemoveModifierRefactoring.cs" />
    <Compile Include="Refactorings\AddOrRenameParameterRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceSwitchWithIfElseRefactoring.cs" />
    <Compile Include="Refactorings\CloseParenTokenRefactoring.cs" />
    <Compile Include="Refactorings\PostfixUnaryExpressionRefactoring.cs" />
    <Compile Include="Refactorings\PrefixUnaryExpressionRefactoring.cs" />
    <Compile Include="Refactorings\CommaTokenRefactoring.cs" />
    <Compile Include="Refactorings\CommentTriviaRefactoring.cs" />
    <Compile Include="Refactorings\ParameterRefactoring.cs" />
    <Compile Include="Refactorings\LiteralExpressionRefactoring.cs" />
    <Compile Include="Refactorings\VariableDeclarationRefactoring.cs" />
    <Compile Include="Refactorings\NegateOperatorRefactoring.cs" />
    <Compile Include="Refactorings\UsingStatementRefactoring.cs" />
    <Compile Include="Refactorings\WhileStatementRefactoring.cs" />
    <Compile Include="Refactorings\ForEachStatementRefactoring.cs" />
    <Compile Include="Refactorings\ParameterListRefactoring.cs" />
    <Compile Include="Refactorings\ArgumentListRefactoring.cs" />
    <Compile Include="Refactorings\ConditionalExpressionRefactoring.cs" />
    <Compile Include="Refactorings\SwitchStatementRefactoring.cs" />
    <Compile Include="Refactorings\SwitchSectionRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceConditionalExpressionWithIfElseRefactoring.cs" />
    <Compile Include="Refactorings\ReverseForLoopRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceForWithForEachRefactoring.cs" />
    <Compile Include="Refactorings\SwapExpressionsRefactoring.cs" />
    <Compile Include="Refactorings\MemberDeclarationsRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceMethodWithProperty\ReplaceMethodWithPropertySyntaxRewriter.cs" />
    <Compile Include="Refactorings\RemoveInterpolationRefactoring.cs" />
    <Compile Include="Refactorings\RemoveAllPreprocessorDirectivesRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceIfElseWithSwitchRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceEqualsExpressionWithStringEqualsRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceAsWithCastRefactoring.cs" />
    <Compile Include="StringLiteralChain.cs" />
    <Compile Include="SyntaxHelper.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Refactorings\MemberDeclarationRefactoring.cs" />
    <Compile Include="Refactorings\NodeInList\NodeSyntaxRewriter.cs" />
    <Compile Include="Refactorings\NodeInList\ParameterSyntaxRewriter.cs" />
    <Compile Include="Refactorings\NodeInList\ArgumentSyntaxRewriter.cs" />
    <Compile Include="Refactorings\ModifyExpressionRefactoring.cs" />
    <Compile Include="Refactorings\UsingDirectiveRefactoring.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="Roslynator.CSharp.Refactorings.snk" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CodeAnalysis, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.Common.1.0.0\lib\portable-net45+win8\Microsoft.CodeAnalysis.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.CSharp.1.0.0\lib\portable-net45+win8\Microsoft.CodeAnalysis.CSharp.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp.Workspaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.CSharp.Workspaces.1.0.0\lib\portable-net45+win8\Microsoft.CodeAnalysis.CSharp.Workspaces.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.Workspaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.Workspaces.Common.1.0.0\lib\portable-net45+win8\Microsoft.CodeAnalysis.Workspaces.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Collections.Immutable, Version=1.1.36.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\System.Collections.Immutable.1.1.36\lib\portable-net45+win8+wp8+wpa81\System.Collections.Immutable.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.AttributedModel, Version=1.0.27.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.AttributedModel.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Convention, Version=1.0.27.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Convention.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Hosting, Version=1.0.27.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Hosting.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Runtime, Version=1.0.27.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Runtime.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.TypedParts, Version=1.0.27.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.TypedParts.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Reflection.Metadata, Version=1.0.21.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\System.Reflection.Metadata.1.0.21\lib\portable-net45+win8\System.Reflection.Metadata.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Utilities\Utilities.csproj">
      <Project>{34a3e42e-2254-4ee7-a152-eedb18e3d7e3}</Project>
      <Name>Utilities</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Analyzer Include="..\..\packages\CSharpAnalyzers.1.1.0\analyzers\dotnet\cs\Roslynator.CSharp.Analyzers.dll" />
    <Analyzer Include="..\..\packages\CSharpAnalyzers.1.1.0\analyzers\dotnet\cs\Roslynator.Utilities.dll" />
    <Analyzer Include="..\..\packages\Microsoft.CodeAnalysis.Analyzers.1.0.0\analyzers\dotnet\cs\Microsoft.CodeAnalysis.Analyzers.dll" />
    <Analyzer Include="..\..\packages\Microsoft.CodeAnalysis.Analyzers.1.0.0\analyzers\dotnet\cs\Microsoft.CodeAnalysis.CSharp.Analyzers.dll" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="RefactoringsTemplate.xml">
      <SubType>Designer</SubType>
    </Content>
    <Content Include="Refactorings.xml">
      <SubType>Designer</SubType>
    </Content>
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\v4.6\Microsoft.Portable.CSharp.targets" />
  <Target Name="AfterBuild">
    <GetAssemblyIdentity AssemblyFiles="$(OutDir)\$(AssemblyName).dll">
      <Output TaskParameter="Assemblies" ItemName="AnalyzerAssemblyInfo" />
    </GetAssemblyIdentity>
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>